version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: rfminsights-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-rfminsights}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rfminsights}
      POSTGRES_DB: ${POSTGRES_DB:-rfminsights}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Mapped to a different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfminsights"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: rfminsights-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-rfminsights}:${POSTGRES_PASSWORD:-rfminsights}@postgres:5432/${POSTGRES_DB:-rfminsights}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./analysis_history:/app/analysis_history
      - ./pdfs:/app/pdfs

  # Nginx Frontend
  web:
    image: nginx:alpine
    container_name: rfminsights-web
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: rfminsights-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email rfm@example.com -d app.rfminsights.com.br -d api.rfminsights.com.br --agree-tos

volumes:
  postgres_data: 