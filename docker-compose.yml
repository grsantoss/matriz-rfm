version: '3.8'

services:
  # Traefik reverse proxy with automatic SSL
  traefik:
    image: traefik:v2.10
    container_name: rfminsights-traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - rfm_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.rfminsights.com.br`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$1UiiVACo$$fvbLCecIhQhWHbvM/DIR0/" # admin:secure_password

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: rfminsights-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-rfminsights}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rfminsights}
      POSTGRES_DB: ${POSTGRES_DB:-rfminsights}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rfm_network
    ports:
      - "5433:5432"  # Mapped to a different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfminsights"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: rfminsights-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-rfminsights}:${POSTGRES_PASSWORD:-rfminsights}@postgres:5432/${POSTGRES_DB:-rfminsights}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PORT=8000
      - CORS_ORIGINS=https://app.rfminsights.com.br
    volumes:
      - ./logs:/app/logs
      - ./analysis_history:/app/analysis_history
      - ./pdfs:/app/pdfs
    expose:
      - "8000"
    networks:
      - rfm_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.rfminsights.com.br`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworigin=https://app.rfminsights.com.br"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors-headers.headers.addvaryheader=true"

  # Frontend Web Server
  web:
    image: nginx:alpine
    container_name: rfminsights-web
    restart: always
    volumes:
      - ./app:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    expose:
      - "80"
    networks:
      - rfm_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`app.rfminsights.com.br`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.routers.web.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.customresponseheaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.security-headers.headers.customresponseheaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.security-headers.headers.customresponseheaders.Referrer-Policy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.customresponseheaders.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload"

networks:
  rfm_network:
    driver: bridge

volumes:
  postgres_data: 